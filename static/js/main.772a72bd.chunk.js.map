{"version":3,"sources":["enums/ActionType.ts","services/MovieCardService.ts","components/Card.tsx","components/MovieCard.tsx","App.tsx","index.tsx"],"names":["EActionType","baseUrl","MovieCardDataService","getAll","axios","get","rejectOrAcceptById","id","actionType","put","Card","props","className","style","backgroundImage","imageURL","title","rating","summary","MovieCard","useState","movieCard","setMovieCard","currentMovieCard","setCurrentMovieCard","swiperInstance","setSwiperInstance","useEffect","getMovieCard","then","response","data","sendSelectionResult","onButtonClick","currentIndex","realIndex","slideTo","onSwiper","onSliderFirstMove","REJECT","allowSlidePrev","map","elem","i","Button","size","variant","color","onClick","ACCEPT","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAAYA,E,uFCINC,EAAU,qCAkBDC,EALc,CAC3BC,OAZa,WACb,OAAOC,IAAMC,IAAN,UAA8BJ,EAA9B,sBAYPK,mBATyB,SACzBC,EACAC,GAEA,OAAOJ,IAAMK,IAAN,UAA4BR,EAA5B,YAAuCM,EAAvC,YAA6CC,O,SDd1CR,K,gBAAAA,E,iBAAAA,M,8CEwDGU,EAlDuB,SAACC,GACrC,OACE,qBAAKC,UAAU,sBAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBACEA,UAAU,YACVC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAMI,SAAf,QAE1B,sBAAKH,UAAU,kBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,6BAAKD,EAAMK,QACX,qBAAIJ,UAAU,YAAd,UACE,yCACA,4CACA,kEAIN,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,2CAEF,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,cAAd,SACE,yCAEGD,EAAMM,iBAKf,qBAAKL,UAAU,UAAf,SACE,qBAAKA,UAAU,OAAf,SACE,mBAAGA,UAAU,oBAAb,SAAkCD,EAAMO,cAG5C,qBAAKN,UAAU,qBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,mBAAGA,UAAU,eAAb,qECsCCO,EAvEa,WAC1B,MAAkCC,mBAA+B,IAAjE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgDF,qBAAhD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA4CJ,qBAA5C,mBAAOK,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAe,WACnB1B,EAAqBC,SAAS0B,MAC5B,SAACC,GACCR,EAAaQ,EAASC,MACtBP,EAAoBM,EAASC,KAAK,QAKlCC,EAAsB,SAC1BxB,EACAyB,GAEA,IAAMC,EAAeT,EAAeU,UAAY,EAGhD,OAFAX,EAAoBH,EAAUa,IAC9BhC,EAAqBI,mBAArB,OAAwCiB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAkBhB,GAAIC,IACvDyB,GAAgBR,EAAeW,QAAQF,IAGhD,OACE,qBAAKtB,UAAU,sBAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CACEyB,SAAUX,EACVY,kBAAmB,kBACjBN,EAAoBhC,EAAYuC,QAAQ,IAE1CC,gBAAgB,EALlB,SAOGnB,EAAUoB,KAAI,SAACC,EAAMC,GACpB,OACE,cAAC,IAAD,UACE,cAAC,EAAD,eAAUD,KADMC,QAMxB,sBAAK/B,UAAU,mBAAf,UACE,cAACgC,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNC,QAAS,kBAAMhB,EAAoBhC,EAAYiD,QAAQ,IAJzD,oBAQA,cAACL,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,MAAM,QACNC,QAAS,kBAAMhB,EAAoBhC,EAAYuC,QAAQ,IAJzD,+BC5DGW,EAJO,WACpB,OAAO,cAAC,EAAD,K,MCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.772a72bd.chunk.js","sourcesContent":["export enum EActionType {\r\n  ACCEPT = \"accept\",\r\n  REJECT = \"reject\",\r\n}\r\n","import axios from \"axios\";\r\nimport { EActionType } from \"../enums/ActionType\";\r\nimport IMoveCardData from \"../types/MovieCard\";\r\n\r\nconst baseUrl = \"/tinder-for-movies/recommendations\";\r\n\r\nconst getAll = () => {\r\n  return axios.get<IMoveCardData[]>(`${baseUrl}/movie-card.json`);\r\n};\r\n\r\nconst rejectOrAcceptById = (\r\n  id: string | undefined,\r\n  actionType: EActionType\r\n) => {\r\n  return axios.put<EActionType[]>(`${baseUrl}/${id}/${actionType}`);\r\n};\r\n\r\nconst MovieCardDataService = {\r\n  getAll,\r\n  rejectOrAcceptById,\r\n};\r\n\r\nexport default MovieCardDataService;\r\n","import React from \"react\";\r\n\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"swiper/swiper.min.css\";\r\nimport IMoveCardData from \"../types/MovieCard\";\r\n\r\nconst Card: React.FC<IMoveCardData> = (props) => {\r\n  return (\r\n    <div className=\"cellphone-container\">\r\n      <div className=\"movie\">\r\n        <div\r\n          className=\"movie-img\"\r\n          style={{ backgroundImage: `url(${props.imageURL})` }}\r\n        ></div>\r\n        <div className=\"text-movie-cont\">\r\n          <div className=\"mr-grid\">\r\n            <div className=\"col1\">\r\n              <h1>{props.title}</h1>\r\n              <ul className=\"movie-gen\">\r\n                <li>16 yo /</li>\r\n                <li>1h 45min /</li>\r\n                <li>Adventure, Drama, Sci-Fi</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"mr-grid summary-row\">\r\n            <div className=\"col2\">\r\n              <h5>SUMMARY</h5>\r\n            </div>\r\n            <div className=\"col2\">\r\n              <ul className=\"movie-likes\">\r\n                <li>\r\n                  Rating:\r\n                  {props.rating}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"mr-grid\">\r\n            <div className=\"col1\">\r\n              <p className=\"movie-description\">{props.summary}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"mr-grid actors-row\">\r\n            <div className=\"col1\">\r\n              <p className=\"movie-actors\">\r\n                Chris Evans, Robert Downey, Channing Tatum\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MovieCardDataService from \"../services/MovieCardService\";\r\nimport IMoveCardData from \"../types/MovieCard\";\r\nimport { EActionType } from \"../enums/ActionType\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"swiper/swiper.min.css\";\r\nimport Card from \"./Card\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nconst MovieCard: React.FC = () => {\r\n  const [movieCard, setMovieCard] = useState<Array<IMoveCardData>>([]);\r\n  const [currentMovieCard, setCurrentMovieCard] = useState<IMoveCardData>();\r\n  const [swiperInstance, setSwiperInstance] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    getMovieCard();\r\n  }, []);\r\n\r\n  const getMovieCard = () => {\r\n    MovieCardDataService.getAll().then(\r\n      (response: AxiosResponse<IMoveCardData[]>) => {\r\n        setMovieCard(response.data);\r\n        setCurrentMovieCard(response.data[0]);\r\n      }\r\n    );\r\n  };\r\n\r\n  const sendSelectionResult = (\r\n    actionType: EActionType,\r\n    onButtonClick: boolean\r\n  ) => {\r\n    const currentIndex = swiperInstance.realIndex + 1;\r\n    setCurrentMovieCard(movieCard[currentIndex]);\r\n    MovieCardDataService.rejectOrAcceptById(currentMovieCard?.id, actionType);\r\n    return onButtonClick ? swiperInstance.slideTo(currentIndex) : true;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pt-5 pb-5\">\r\n      <div className=\"row justify-content-md-center\">\r\n        <div className=\"col-12 col-lg-4\">\r\n          <Swiper\r\n            onSwiper={setSwiperInstance}\r\n            onSliderFirstMove={() =>\r\n              sendSelectionResult(EActionType.REJECT, false)\r\n            }\r\n            allowSlidePrev={false}\r\n          >\r\n            {movieCard.map((elem, i) => {\r\n              return (\r\n                <SwiperSlide key={i}>\r\n                  <Card {...elem}></Card>\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n          </Swiper>\r\n          <div className=\"button-container\">\r\n            <Button\r\n              size=\"medium\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={() => sendSelectionResult(EActionType.ACCEPT, true)}\r\n            >\r\n              Accept\r\n            </Button>\r\n            <Button\r\n              size=\"medium\"\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              onClick={() => sendSelectionResult(EActionType.REJECT, true)}\r\n            >\r\n              Reject\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport MovieCard from \"./components/MovieCard\";\n\nconst App: React.FC = () => {\n  return <MovieCard />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}